模拟保存动作,定义一个保存动作的接口:IUserDao.java,然后目标对象实现这个接口的方法UserDao.java,此时如果使用静态代理方式,
就需要在代理对象(UserDaoProxy.java)中也实现IUserDao接口.调用的时候通过调用代理对象的方法来调用目标对象.
需要注意的是,代理对象与目标对象要实现相同的接口,然后通过调用相同的方法来调用目标对象的方法

静态代理总结:
1.可以做到在不修改目标对象的功能前提下,对目标功能扩展.
2.缺点:

因为代理对象需要与目标对象实现一样的接口,所以会有很多代理类,类太多.同时,一旦接口增加方法,目标对象与代理对象都要维护.
如何解决静态代理中的缺点呢?答案是可以使用动态代理方式

为什么代理对象需要目标对象实现一样的接口

你说的就不叫代理模式了，它本身就是针对相同的接口编程，以达到透明地替换原来的对象
你这样搞一个新的类，这叫委托模式了，
打个比方，要代理的类为A,它实现的接口为I,用户代码依赖于接口I,你用代理模式
的话，代理类还是实现了接口I,这样用户代码不用修改，还是依赖于接口I.
但如果使用委托模式的话，你的那个委托类为B，B没有实现接口I。
那用户代码就得依赖于B，还不是原来的I